<?php
require_once __DIR__ . '/PHPCtagsTestCase.php';

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-07-10 at 02:00:19.
 */
class PHPCtagsTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var PHPCtags
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new PHPCtags();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers PHPCtags::export
     */
    public function testExport()
    {
        $testcases = scandir(__DIR__ . '/testcases');
        foreach($testcases as $testcase)
        {
            if($testcase === '.' || $testcase === '..') {
                continue;
            }

            require_once __DIR__ . '/testcases/' . $testcase;
            $testcase_id = strstr($testcase, '.', true);
            $testcase_class = 't_' . $testcase_id;
            $testcase_object = new $testcase_class;

            $testcase_expect = '';
            $testcase_format = $testcase_object->getFormat();
            $testcase_example = $testcase_object->getExample();
            $testcase_example = realpath(__DIR__ . '/examples/' . $testcase_example . '.example.php');
            $testcase_example_define = $testcase_object->getExampleDefine();
            $testcase_example_content = $testcase_object->getExampleContent();
            foreach ($testcase_example_define as $define) {
                $line = $testcase_format;

                $line = preg_replace('/<name>/', $define['name'], $line);
                $line = preg_replace('/<file>/', $testcase_example, $line);
                $line = preg_replace('/<line content>/', rtrim($testcase_example_content[$define['line'] - 1], "\n"), $line);
                $line = preg_replace('/<kind>/', $define['kind'], $line);
                $line = preg_replace('/<line number>/', $define['line'], $line);
                if(!empty($define['scope'])) {
                    $line = preg_replace('/<scope>/', $define['scope'], $line);
                } else {
                    $line = preg_replace('/<scope>/', '', $line);
                }
                if(!empty($define['access'])) {
                    $line = preg_replace('/<access>/', 'access:' . $define['access'], $line);
                } else {
                    $line = preg_replace('/<access>/', '', $line);
                }
                $line = rtrim($line, "\t");
                $line .= "\n";

                $testcase_expect .= $line;
            }

            ob_start();
            $testcase_options = $testcase_object->getOptions();
            $this->object->export($testcase_example, $testcase_options);
            $testcase_result = ob_get_contents();
            ob_end_clean();

            $this->assertEquals(md5($testcase_result), md5($testcase_expect))
        }
    }

}
